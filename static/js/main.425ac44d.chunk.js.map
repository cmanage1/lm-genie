{"version":3,"sources":["components/Lsat/Lsat.module.css","components/Mcat/Mcat.module.css","components/Landing/Landing.module.css","components/About/About.module.css","components/Footer/footer.module.css","components/images/genie.png","components/Lsat/Lsat.js","components/Mcat/Mcat.js","components/Landing/Landing.js","components/About/About.js","components/Nav/index.js","components/Footer/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Lsat","useState","userProvince","setUserProvince","checked","setChecked","results","setResults","isHidden","userGPA","userLSAT","userTuitionBudget","state","setState","timerRef","React","useRef","query","setQuery","handleChange","event","value","target","id","useEffect","clearTimeout","current","gpaIsInvalid","lsatIsInvalid","className","styles","form","noValidate","autoComplete","onSubmit","preventDefault","gpa","lsatScore","tuitionBudget","data","options","method","headers","mode","body","JSON","stringify","fetch","then","res","json","console","log","catch","e","error","Typography","variant","component","selection","TextField","select","onChange","helperText","MenuItem","textFields","type","FormControlLabel","control","Checkbox","inputProps","label","Fade","in","disabled","href","Button","onClick","setTimeout","map","school","key","style","transitionDelay","unmountOnExit","CircularProgress","Mcat","usermcat","mcatIsInvalid","mcatScore","Landing","intro","logo","src","require","alt","About","Nav","to","Footer","footer","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.425ac44d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Lsat_form__1ZRzS\",\"selection\":\"Lsat_selection__22giA\",\"results\":\"Lsat_results__3Yb0N\",\"textFields\":\"Lsat_textFields__10YcB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Mcat_form__2gWxx\",\"selection\":\"Mcat_selection__2t910\",\"results\":\"Mcat_results__2bps0\",\"textFields\":\"Mcat_textFields__2pkzp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"intro\":\"Landing_intro__2XESB\",\"logo\":\"Landing_logo__1SVgM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"intro\":\"About_intro__2xbze\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"footer_footer__2oW47\"};","export default __webpack_public_path__ + \"static/media/genie.df7b7aea.png\";","import React,{useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Fade from '@material-ui/core/Fade';\nimport Typography from '@material-ui/core/Typography';\nimport styles from './Lsat.module.css';\n\nfunction Lsat(){\n\n    const [userProvince, setUserProvince] = useState('any');\n    const [checked, setChecked] = useState(false);\n    const [results, setResults] = useState([]);\n    const isHidden = checked === false;\n    const [state, setState] = useState({\n        userGPA: '',\n        userLSAT: '',\n        userTuitionBudget: ''\n    })\n    const timerRef = React.useRef();\n    const [query, setQuery] = React.useState('idle');\n\n    React.useEffect(\n        () => () => {\n            clearTimeout(timerRef.current);\n        },\n        [],\n    );\n\n    const handleLoading = () => {\n        clearTimeout(timerRef.current);\n\n        if (query !== 'idle') {\n            setQuery('idle');\n            return;\n        }\n        setQuery('progress');\n        timerRef.current = setTimeout(() => {\n            setQuery('success');\n        }, 2000);\n    };\n\n    function handleChange(event){\n        const value = event.target.value;\n        setState( { \n            ...state,\n            [event.target.id] : value \n        });\n    };\n\n    const handleProvinceChange = (event) =>{ \n        setUserProvince(event.target.value)\n    }\n\n    const handleCheckChange = (event) => {\n        setChecked(event.target.checked);\n    }\n\n    function handleSubmit(event){ \n        event.preventDefault();\n\n        var gpa = state.userGPA;\n        var lsatScore = state.userLSAT;\n        var tuitionBudget = state.userTuitionBudget;\n        var data = {\n            userProvince, \n            gpa , \n            lsatScore , \n            tuitionBudget ,\n        }\n\n        const options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            mode: 'cors',\n            body: JSON.stringify(data)\n        };\n\n        fetch('/lsat_calc', options)\n            .then(res => res.json())\n            .then( (data) => {\n                console.log(data)\n                setResults(data)\n            }).catch( e => {\n                console.error(e);\n            });\n    }\n\n    var gpaIsInvalid = state.userGPA > 4.0 || state.userGPA < 1.0  ;\n    var lsatIsInvalid = state.userLSAT > 180 || state.userLSAT < 120 ;\n    \n\n    return(\n        <div >\n            <form \n                className={styles.form} \n                noValidate \n                autoComplete=\"off\"\n                onSubmit={ handleSubmit } >\n                <Typography variant=\"h4\" component=\"h4\">\n                    Law School Matchmaker\n                </Typography>\n                <Typography variant=\"body1\" component=\"span\">\n                    Please complete the form below and click submit\n                </Typography>\n                <div className={styles.selection}>\n                    <TextField\n                        select\n                        id=\"userProvince\"\n                        value={  userProvince }\n                        onChange={ handleProvinceChange }\n                        helperText=\"Select your preferred province\"\n                        variant=\"outlined\"\n                    >\n                        <MenuItem value={'any'}>Any</MenuItem>\n                        <MenuItem value={'alberta'}>Alberta </MenuItem>\n                        <MenuItem value={'britishcolumbia'}>British Columbia</MenuItem>\n                        <MenuItem value={'newbrunswick'}>New Brunswick</MenuItem>\n                        <MenuItem value={'newfoundlandandlabrador'}>Newfoundland and Labrador</MenuItem>\n                        <MenuItem value={'novascotia'}>Nova Scotia</MenuItem>\n                        <MenuItem value={'princeedwardisland'}>Prince Edward Island</MenuItem>\n                        <MenuItem value={'ontario'}>Ontario</MenuItem>\n                        <MenuItem value={'quebec'}>Quebec</MenuItem>\n                        <MenuItem value={'saskatchewan'}>Saskatchewan</MenuItem>\n                    </TextField>\n                </div>\n                <div className={styles.textFields}>\n                    <TextField\n                        error = {gpaIsInvalid}\n                        id=\"userGPA\"\n                        helperText=\" Anticipated GPA (Between 1 and 4)\"\n                        onChange={handleChange}\n                        variant=\"outlined\"\n                        type=\"number\"\n                        >\n                    </TextField>\n\n                    <TextField\n                        error = {lsatIsInvalid}\n                        id=\"userLSAT\"\n                        helperText=\"Anticipated LSAT Score (Between 120 and 180)\"\n                        onChange={handleChange}\n                        variant=\"outlined\"\n                        type=\"number\"\n                        >\n                    </TextField>\n                </div>\n\n                <div >   \n                    <FormControlLabel\n                        control={\n                            <Checkbox\n                                checked={checked}\n                                onChange={handleCheckChange}\n                                inputProps={{ 'aria-label': 'primary checkbox' }}\n                            />\n                        }\n                        label=\"Include Tuition Budget\"\n                    />             \n                    <Fade in={checked}>\n                        <TextField\n                            id=\"userTuitionBudget\"\n                            helperText=\"Tution Budget\"\n                            onChange={handleChange}\n                            disabled={isHidden} \n                            \n                            >\n                        </TextField> \n                    </Fade>\n                </div>\n                <div>\n                    <Typography variant=\"body1\" component=\"span\">\n                        <b className=\"disclaimerHeader\"> Disclaimer! </b><br></br>\n                        We take into the account the <b>minimum</b> MCAT score and GPA\n                        required for each school. You can look at\n                        our database <a href=\"https://github.com/cmanage1/SchoolFinder/blob/master/server/lawSchoolsDB.json\">here </a>\n                        to see where you stand.\n                    </Typography>\n\n                </div>\n                <Button \n                    onClick={handleLoading} \n                    type=\"submit\" \n                    value=\"Submit\"\n                    disabled= { gpaIsInvalid || lsatIsInvalid} > \n                        Match Me\n                </Button>\n            </form>\n\n            <div className={styles.results}>\n                {query === 'success' ? (\n                    results.map(school =>\n                        <div\n                            key={school} >\n                            <h4> {school}</h4>\n                        </div>\n                    )\n                    ) : (\n                    <Fade\n                        in={query === 'progress'}\n                        style={{\n                            transitionDelay: query === 'progress' ? '600ms' : '0ms',\n                        }}\n                        unmountOnExit\n                    >\n                        <CircularProgress />\n                    </Fade>\n                    )}\n            </div>\n\n        </div>\n    )\n}\n\nexport default Lsat;","import React, { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Fade from '@material-ui/core/Fade';\nimport Typography from '@material-ui/core/Typography';\nimport styles from './Mcat.module.css';\n\nfunction Mcat() {\n\n    const [userProvince, setUserProvince] = useState('any');\n    const [checked, setChecked] = useState(false);\n    const [results, setResults] = useState([]);\n    const isHidden = checked === false;\n    const [state, setState] = useState({\n        userGPA: '',\n        usermcat: '',\n        userTuitionBudget: ''\n    })\n    const timerRef = React.useRef();\n    const [query, setQuery] = React.useState('idle');\n\n    React.useEffect(\n        () => () => {\n            clearTimeout(timerRef.current);\n        },\n        [],\n    );\n\n    const handleLoading = () => {\n        clearTimeout(timerRef.current);\n\n        if (query !== 'idle') {\n            setQuery('idle');\n            return;\n        }\n        setQuery('progress');\n        timerRef.current = setTimeout(() => {\n            setQuery('success');\n        }, 2000);\n    };\n\n    function handleChange(event) {\n        const value = event.target.value;\n        setState({\n            ...state,\n            [event.target.id]: value\n        });\n    };\n\n    const handleProvinceChange = (event) => {\n        setUserProvince(event.target.value)\n    }\n\n    const handleCheckChange = (event) => {\n        setChecked(event.target.checked);\n    }\n\n    function handleSubmit(event) {\n        event.preventDefault();\n\n        var gpa = state.userGPA;\n        var mcatScore = state.usermcat;\n        var tuitionBudget = state.userTuitionBudget;\n        var data = {\n            userProvince,\n            gpa,\n            mcatScore,\n            tuitionBudget,\n        }\n\n        const options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            mode: 'cors',\n            body: JSON.stringify(data)\n        };\n\n        fetch('/mcat_calc', options)\n            .then(res => res.json())\n            .then((data) => {\n                console.log(data)\n                setResults(data)\n            }).catch(e => {\n                console.error(e);\n            });\n    }\n\n    var gpaIsInvalid = state.userGPA > 4.0 || state.userGPA < 1.0;\n    var mcatIsInvalid = state.usermcat < 450 || state.usermcat > 527;\n\n\n    return (\n        <div >\n            <form\n                className={styles.form}\n                noValidate\n                autoComplete=\"off\"\n                onSubmit={handleSubmit} >\n                <Typography variant=\"h4\" component=\"h4\">\n                    Med School Matchmaker\n                </Typography>\n                <Typography variant=\"body1\" component=\"span\">\n                    Please complete the form below and click submit\n                </Typography>\n                <div className={styles.selection}>\n                    <TextField\n                        select\n                        id=\"userProvince\"\n                        value={userProvince}\n                        onChange={handleProvinceChange}\n                        helperText=\"Select your preferred province\"\n                        variant=\"outlined\"\n                    >\n                        <MenuItem value={'any'}>Any</MenuItem>\n                        <MenuItem value={'alberta'}>Alberta </MenuItem>\n                        <MenuItem value={'britishcolumbia'}>British Columbia</MenuItem>\n                        <MenuItem value={'newbrunswick'}>New Brunswick</MenuItem>\n                        <MenuItem value={'newfoundlandandlabrador'}>Newfoundland and Labrador</MenuItem>\n                        <MenuItem value={'novascotia'}>Nova Scotia</MenuItem>\n                        <MenuItem value={'princeedwardisland'}>Prince Edward Island</MenuItem>\n                        <MenuItem value={'ontario'}>Ontario</MenuItem>\n                        <MenuItem value={'quebec'}>Quebec</MenuItem>\n                        <MenuItem value={'saskatchewan'}>Saskatchewan</MenuItem>\n                    </TextField>\n                </div>\n                <div className={styles.textFields}>\n                    <TextField\n                        error={gpaIsInvalid}\n                        id=\"userGPA\"\n                        helperText=\" Anticipated GPA (Between 1 and 4)\"\n                        onChange={handleChange}\n                        variant=\"outlined\"\n                        type=\"number\"\n                    >\n                    </TextField>\n\n                    <TextField\n                        error={mcatIsInvalid}\n                        id=\"usermcat\"\n                        helperText=\"Anticipated MCAT Score (Between 450 and 528)\"\n                        onChange={handleChange}\n                        variant=\"outlined\"\n                        type=\"number\"\n                    >\n                    </TextField>\n                </div>\n\n                <div >\n                    <FormControlLabel\n                        control={\n                            <Checkbox\n                                checked={checked}\n                                onChange={handleCheckChange}\n                                inputProps={{ 'aria-label': 'primary checkbox' }}\n                            />\n                        }\n                        label=\"Include Tuition Budget\"\n                    />\n                    <Fade in={checked}>\n                        <TextField\n                            id=\"userTuitionBudget\"\n                            helperText=\"Tution Budget\"\n                            onChange={handleChange}\n                            disabled={isHidden}\n                        >\n                        </TextField>\n                    </Fade>\n                </div>\n                <div>\n                    <Typography variant=\"body1\" component=\"span\">\n                        <b className=\"disclaimerHeader\"> Disclaimer! </b><br></br>\n                        We take into the account the <b>minimum</b> MCAT score and GPA\n                        required for each school. You can look at\n                        our database <a href=\"https://github.com/cmanage1/SchoolFinder/blob/master/server/lawSchoolsDB.json\">here </a>\n                        to see where you stand.\n                    </Typography>\n\n                </div>\n                <Button\n                    onClick={handleLoading}\n                    type=\"submit\"\n                    value=\"Submit\"\n                    disabled={gpaIsInvalid || mcatIsInvalid} >\n                    Match Me\n                </Button>\n            </form>\n\n            <div className={styles.results}>\n                {query === 'success' ? (\n                    results.map(school =>\n                        <div\n                            key={school} >\n                            <h4> {school}</h4>\n                        </div>\n                    )\n                ) : (\n                        <Fade\n                            in={query === 'progress'}\n                            style={{\n                                transitionDelay: query === 'progress' ? '600ms' : '0ms',\n                            }}\n                            unmountOnExit\n                        >\n                            <CircularProgress />\n                        </Fade>\n                    )}\n            </div>\n\n        </div>\n    )\n}\n\nexport default Mcat;","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport styles from './Landing.module.css'\n\nfunction Landing(){\n    return(\n        <div className={styles.intro}>\n            <Typography variant=\"h4\" component=\"h4\">\n                LM Genie matches a LAW or MED School in North America for you\n            </Typography>\n            <img className={styles.logo} src={require('../images/genie.png')} alt=\"logo\" />\n        </div>\n    )\n}\n\nexport default Landing;","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport styles from './About.module.css'\n\nfunction About() {\n    return (\n        <div className={styles.intro}>\n            <Typography variant=\"h4\" component=\"h4\">\n                This website is powered by React.js and Flask\n            </Typography>\n\n        </div>\n    )\n}\n\nexport default About;","import React from 'react';\nimport './nav.css'\nimport { Link } from 'react-router-dom';\nimport { Button} from '@material-ui/core';\n\nconst Nav = () => (\n\n    <nav className=\"navbar\" >\n        <ul >\n            <Link className=\"nav-link\" to=\"/\">\n                <Button > Home </Button>\n            </Link>\n\n            <Link className=\"nav-link\" to=\"/lsat\">\n                <Button> LSAT </Button>\n            </Link>\n\n            <Link className=\"nav-link\" to=\"/mcat\">\n                <Button> Mcat </Button> \n            </Link>\n\n            <Link className=\"nav-link\" to=\"/about\">\n                <Button> About </Button>\n            </Link>\n        </ul>\n    </nav>\n);\n\n\nexport default Nav;\n","import React from 'react';\nimport styles from './footer.module.css'\n\nconst Footer = () => (\n    <footer className={styles.footer}>\n        <p>We are open source, view the code for this website\n        <a href=\"https://github.com/cmanage1/lm-genie\"> here</a>\n        </p>\n    </footer>\n    \n)\n\nexport default Footer;","import React from 'react';\nimport './App.css';\nimport { \n  BrowserRouter as Router, \n  Route \n} from 'react-router-dom';\nimport Lsat from './components/Lsat/Lsat'\nimport Mcat from './components/Mcat/Mcat'\nimport Landing from './components/Landing/Landing'\nimport About from './components/About/About'\nimport Nav from './components/Nav'\nimport Footer from './components/Footer';\n//import Footer from './components/Footer'\n\n const App = () => (\n  <Router>\n    <Nav />\n    <div>   \n         <Route exact path=\"/\"  component={Landing} />\n         <Route path=\"/lsat\" component={Lsat} />\n         <Route path=\"/mcat\" component={Mcat} />\n         <Route path=\"/about\" component={About} />\n     </div>\n     <Footer/>\n   </Router>\n)\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\n    <App />,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}